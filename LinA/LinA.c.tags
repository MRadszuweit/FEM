# format=tagmanager
AGGRESSIVEÃ65536÷0
AMG_PCGÃ65536÷0
AMG_SYSTEM_INFOÃ2048÷0
AMG_aggr_smoothing_iterationsÃ64ŒAMG_SYSTEM_INFO÷0œint
AMG_coarseningÃ64ŒAMG_SYSTEM_INFO÷0œint
AMG_coarsest_solverÃ1024Õ(sparse_matrix* L,sparse_matrix* U,double* F,double* Sol,int size)ŒAMG_SYSTEM_INFO÷0œvoid
AMG_cycle_structureÃ64ŒAMG_SYSTEM_INFO÷0œint
AMG_default_iterationsÃ1024Õ(int depth)÷0œint *
AMG_deg_of_freedomÃ64ŒAMG_SYSTEM_INFO÷0œint
AMG_free_dataÃ1024Õ(amg_system_info* Data)÷0œvoid
AMG_infoÃ64ŒAMG_SYSTEM_INFO÷0œint
AMG_print_infoÃ1024Õ(int s)÷0œvoid
AMG_prolongation_methodÃ64ŒAMG_SYSTEM_INFO÷0œint
AMG_set_SOR_relaxation_coeffÃ1024Õ(double alpha)÷0œvoid
AMG_setupÃ1024Õ( sparse_matrix* A, int AMG_deg_of_freedom, int depth, int AMG_smoothing_iterations, int AMG_aggr_smoothing_iterations, int AMG_coarsening, int AMG_cycle_structure, int AMG_prolongation_method, void (*AMG_coarsest_solver)(sparse_matrix* L,sparse_matrix* U,double* F,double* Sol,int size), int* (*Get_iter)(int depth))÷0œamg_system_info *
AMG_smoothing_iterationsÃ64ŒAMG_SYSTEM_INFO÷0œint
AMG_solveÃ1024Õ(amg_system_info* System_data,double* F,double* Fine_Sol)÷0œdouble
AUTOMATICÃ65536÷0
AbsoluteÃ4Œanon_enum_3÷0
AssertÃ1024Õ(int assertion, char* error)÷0œvoid
COARSEÃ65536÷0
CONV_CHECKÃ4096÷0œanon_enum_3
CheckEachIterÃ4Œanon_enum_2÷0
CheckOnRestartÃ4Œanon_enum_2÷0
ChildsÃ64Œtree_sparse_matrix÷0œtree_sparse_matrix
Coarse_AÃ64ŒAMG_SYSTEM_INFO÷0œsparse_matrix
Coarse_sizesÃ64ŒAMG_SYSTEM_INFO÷0œint
CoarseningÃ64ŒAMG_SYSTEM_INFO÷0œint
CompareÃ1024Õ(const void* a, const void* b)Œrb_red_blk_tree÷0œint
DATAÃ65536÷0
DATALEVELÃ65536÷0
DATA_TYPEÃ65536÷0
DEBUG_ASSERTÃ65536÷0
DIRECTÃ65536÷0
DOWNÃ65536÷0
DebugÃ4Œanon_enum_0÷0
DestroyInfoÃ1024Õ(void* a)Œrb_red_blk_tree÷0œvoid
DestroyKeyÃ1024Õ(void* a)Œrb_red_blk_tree÷0œvoid
EPMACHÃ65536÷0
ERRORÃ65536÷0
ERRORLEVELÃ65536÷0
FILE_STUFF_HÃ65536÷0
FINEÃ65536÷0
FITERÃ65536÷0
FMISCÃ65536÷0
FRESÃ65536÷0
FULL_AMGÃ65536÷0
F_ProlongÃ1024Õ(sparse_matrix* A,sparse_matrix* B,int* Label,int i, int** Indices,double** Values,int** Status,int** Strong,int** Positions)ŒAMG_SYSTEM_INFO÷0œint
FalseÃ4Œanon_enum_1÷0
FinalÃ4ŒITLIN_DATA::anon_enum_5÷0
Fine_sizesÃ64ŒAMG_SYSTEM_INFO÷0œint
Free_sparseÃ1024Õ(sparse_matrix* A)÷0œvoid
GBITÃ4ŒITLIN_DATA::anon_enum_4÷0
GMRESÃ4ŒITLIN_DATA::anon_enum_4÷0
GMRES_NEWTONÃ65536÷0
Gauss_eleminationÃ1024Õ(sparse_matrix* A,double* b,double* Solution,double tol)÷0œvoid
Get_iterÃ1024Õ(int depth)ŒAMG_SYSTEM_INFO÷0œint *
ILU_residuumÃ1024Õ(sparse_matrix* A,sparse_matrix* L,sparse_matrix* U,double* Sol,double* b)÷0œdouble
INC_E_MISC_Ã65536÷0
ISOLATEDÃ65536÷0
ITLIN_DATAÃ2048÷0
ITLIN_HÃ65536÷0
ITLIN_INFOÃ2048÷0
ITLIN_IOÃ2048÷0
ITLIN_OPTÃ2048÷0
IndicesÃ64ŒSPARSE÷0œint
Indices1Ã64ŒSPARSE3D÷0œint
Indices2Ã64ŒSPARSE3D÷0œint
InitialÃ4ŒITLIN_DATA::anon_enum_5÷0
IntermediateÃ4ŒITLIN_DATA::anon_enum_5÷0
Inverse_MapÃ64Œtree_sparse_matrix÷0œint
LÃ64ŒAMG_SYSTEM_INFO÷0œsparse_matrix
LARGE_SYSTEMÃ65536÷0
LEFTÃ65536÷0
LINEAR_ALGEBRA_HÃ65536÷0
LOGICALÃ4096÷0œanon_enum_1
LU_factorzationÃ1024Õ(double** A,double** L,double** U,int size)÷0œvoid
LU_sparse_block_factorizationÃ1024Õ(sparse_matrix* A,sparse_matrix* LB,sparse_matrix* UB,int* Map,int* Inv_Map)÷0œvoid
LU_sparse_block_solverÃ1024Õ(sparse_matrix* L,sparse_matrix* U,int* Map,int* Inv_Map, double* X,double* B)÷0œvoid
L_triang_fast_invertÃ1024Õ(sparse_matrix* L,int** Ind,double** Val,int size,int I,int max_band_width,double tol)÷0œint
L_triang_invertÃ1024Õ(sparse_matrix* L,double* x)÷0œvoid
Lap_2D_DirichletÃ1024Õ(double a,double b,int dom_size)÷0œsparse_matrix *
LeafÃ64Œtree_sparse_matrix÷0œsparse_matrix
LenÃ64ŒSPARSE÷0œint
LenÃ64ŒSPARSE3D÷0œint
Lower_CrossÃ64Œtree_sparse_matrix÷0œsparse_matrix
Lower_triangular_invertÃ1024Õ(double** L,double* X,int size)÷0œdouble *
MATVECÃ4096÷0œtypedef void
MAXÃ131072Õ(A,B)÷0
MINÃ131072Õ(A,B)÷0
MONITORÃ65536÷0
MONITORLEVELÃ65536÷0
MULTI_HÃ65536÷0
MapÃ64Œtree_sparse_matrix÷0œint
MinimumÃ4Œanon_enum_0÷0
Multi_LU_sparse_block_factorizationÃ1024Õ(sparse_matrix* A,sparse_matrix* LB, sparse_matrix* UB,int* Map,int* Inv_Map,int crit_size)÷0œvoid
NOÃ65536÷0
NONEÃ65536÷0
Newton_GMRES_optionsÃ1024Õ(int bases_imax,int maxiter,double tol)÷0œvoid
Newton_first_guessÃ1024Õ(double* Res,int n)÷0œvoid
Newton_first_guess_optionsÃ1024Õ(int guess_num,int size,double* Min,double* Max)÷0œvoid
Newton_get_all_rootsÃ1024Õ()÷0œdouble * *
Newton_get_full_patternÃ1024Õ(int size)÷0œsparse_matrix *
Newton_set_functionÃ1024Õ(double (*F)(double* X,int i,int size))÷0œvoid
Newton_set_inhomoÃ1024Õ(double* B,int n)÷0œvoid
Newton_set_rangeÃ1024Õ(int size,double* Min,double* Max)÷0œvoid
Newton_solverÃ1024Õ(sparse_matrix* Pattern,double* X,double maxiter,double eps,int mode,double r0)÷0œint
Newton_solver_mult_RootÃ1024Õ(sparse_matrix* Pattern,double maxiter,double eps,int mode)÷0œint
NoneÃ4Œanon_enum_0÷0
NullFunctionÃ1024Õ(void*)÷0œvoid
PCGÃ4ŒITLIN_DATA::anon_enum_4÷0
PCGS_HÃ65536÷0
PCG_AMG_mat_multÃ1024Õ(int n,double* x,double* y)÷0œvoid
PCG_AMG_preconÃ1024Õ(int n,double* R,double* Z)÷0œint
PCG_get_mat_multÃ1024Õ()÷0œvoid *
PCG_get_preconÃ1024Õ()÷0œvoid *
PCG_get_precon_iterÃ1024Õ()÷0œint
PCG_resetÃ1024Õ()÷0œvoid
PCG_set_AMG_solverÃ1024Õ(double (*Prec_solver)( sparse_matrix** Coarse_A, sparse_matrix** Prolongation, sparse_matrix** Restriction, sparse_matrix** L, sparse_matrix** U, double** Coarsest_L, double** Coarsest_U, double* Sol, double* Fine_F, int** Coarsening, int* Fine_sizes, int* Coarse_sizes, int* Iterations, int max_depth, int depth))÷0œvoid
PCG_set_AMG_systemÃ1024Õ(sparse_matrix* A, sparse_matrix** L, sparse_matrix** U, sparse_matrix** Restriction, sparse_matrix** Prolongation, sparse_matrix** Coarse_A, double** C_L, double** C_U, int** Coarsening, int* Coarse_sizes, int* Fine_sizes, int depth)÷0œvoid
PCG_set_mat_multÃ1024Õ(void (*Mat_mult)(int n,double* x,double* y))÷0œvoid
PCG_set_preconÃ1024Õ(int (*Precon)(int n,double* R,double* Z),int max_precon)÷0œvoid
PRECONÃ4096÷0œtypedef void
PREMODEÃ65536÷0
PRINT_LEVELÃ4096÷0œanon_enum_0
ParentÃ64Œtree_sparse_matrix÷0œtree_sparse_matrix
PrintInfoÃ1024Õ(void* a)Œrb_red_blk_tree÷0œvoid
PrintKeyÃ1024Õ(const void* a)Œrb_red_blk_tree÷0œvoid
ProlongationÃ64ŒAMG_SYSTEM_INFO÷0œsparse_matrix
RBDeleteÃ1024Õ(rb_red_blk_tree* , rb_red_blk_node* )÷0œvoid
RBEnumerateÃ1024Õ(rb_red_blk_tree* tree,void* low, void* high)÷0œstk_stack *
RBExactQueryÃ1024Õ(rb_red_blk_tree*, void*)÷0œrb_red_blk_node *
RBLargestÃ1024Õ(rb_red_blk_tree* tree)÷0œrb_red_blk_node *
RBTreeCreateÃ1024Õ(int (*CompFunc)(const void*, const void*), void (*DestFunc)(void*), void (*InfoDestFunc)(void*), void (*PrintFunc)(const void*), void (*PrintInfo)(void*))÷0œrb_red_blk_tree *
RBTreeDestroyÃ1024Õ(rb_red_blk_tree*)÷0œvoid
RBTreeInsertÃ1024Õ(rb_red_blk_tree*, void* key, void* info)÷0œrb_red_blk_node *
RBTreePrintÃ1024Õ(rb_red_blk_tree*)÷0œvoid
RB_TREE_HÃ65536÷0
RCODEÃ65536÷0
RIGHTÃ65536÷0
RelativeÃ4Œanon_enum_3÷0
RestrictionÃ64ŒAMG_SYSTEM_INFO÷0œsparse_matrix
SIGNÃ131072Õ(A)÷0
SMALLÃ65536÷0
SMALL_SYSTEMÃ65536÷0
SORÃ1024Õ(sparse_matrix* A,double* F,double* Sol,double alpha,int iter)÷0œvoid
SOR_residuumÃ1024Õ(sparse_matrix* A,double* Sol,double* b,int alpha)÷0œdouble
SPARSEÃ2048÷0
SPARSE3DÃ2048÷0
STANDARDÃ65536÷0
STAND_ALONEÃ65536÷0
SafeMallocÃ1024Õ(size_t size)÷0œvoid *
SignsÃ64ŒAMG_SYSTEM_INFO÷0œsparse_matrix
SolutionÃ4ŒITLIN_DATA::anon_enum_5÷0
StackCreateÃ1024Õ()÷0œstk_stack *
StackJoinÃ1024Õ(stk_stack * stack1, stk_stack * stack2)÷0œstk_stack *
StackNotEmptyÃ1024Õ(stk_stack *)÷0œint
StackPopÃ1024Õ(stk_stack * theStack)÷0œvoid *
StackPushÃ1024Õ(stk_stack * theStack, DATA_TYPE newInfoPointer)÷0œvoid
TERM_CHECKÃ4096÷0œanon_enum_2
TreePredecessorÃ1024Õ(rb_red_blk_tree*,rb_red_blk_node*)÷0œrb_red_blk_node *
TreeSuccessorÃ1024Õ(rb_red_blk_tree*,rb_red_blk_node*)÷0œrb_red_blk_node *
TrueÃ4Œanon_enum_1÷0
UÃ64ŒAMG_SYSTEM_INFO÷0œsparse_matrix
UNDECIDEDÃ65536÷0
UPÃ65536÷0
U_triang_fast_invertÃ1024Õ(sparse_matrix* U,int**Ind,double** Val,int size,int I,int max_band_width,double tol)÷0œint
U_triang_invertÃ1024Õ(sparse_matrix* U,double* x)÷0œvoid
Upper_CrossÃ64Œtree_sparse_matrix÷0œsparse_matrix
Upper_triangular_invertÃ1024Õ(double** U,double* X,int size)÷0œdouble *
ValuesÃ64ŒSPARSE÷0œdouble
ValuesÃ64ŒSPARSE3D÷0œdouble
VerboseÃ4Œanon_enum_0÷0
WEAKÃ65536÷0
WITHOUT_IOSOLATEDÃ65536÷0
WITH_ISOLATEDÃ65536÷0
YESÃ65536÷0
amg_system_infoÃ4096÷0œAMG_SYSTEM_INFO
anon_enum_0Ã2÷0
anon_enum_1Ã2÷0
anon_enum_2Ã2÷0
anon_enum_3Ã2÷0
anon_enum_4Ã2ŒITLIN_DATA÷0
anon_enum_5Ã2ŒITLIN_DATA÷0
append_dataÃ1024Õ(FILE* file,double* data,int size,int var_num,double time)÷0œvoid
append_vectorÃ1024Õ(double** V1,int n1,double* V2,int n2)÷0œvoid
change_rowÃ1024Õ(sparse_matrix* A,double* F,int i1,int i2)÷0œvoid
change_to_spatial_orderingÃ1024Õ(sparse_matrix* A,sparse_matrix* B,double* F,double* G,int block_size)÷0œvoid
change_var_rowsÃ1024Õ(sparse_matrix* A,double* F,int var1,int var2,int block_size)÷0œvoid
child_numberÃ64Œtree_sparse_matrix÷0œint
cloneÃ1024Õ(sparse_matrix* A)÷0œsparse_matrix *
clone_listÃ1024Õ(int* x,int n)÷0œint *
clone_vectorÃ1024Õ(double* x,int n)÷0œdouble *
codeidÃ64ŒITLIN_DATA÷0œanon_enum_4
complete_LU_factorizationÃ1024Õ(sparse_matrix* A,sparse_matrix* L,sparse_matrix* U)÷0œvoid
convcheckÃ64ŒITLIN_OPT÷0œCONV_CHECK
convert_array_to_sparseÃ1024Õ(double** M_A,sparse_matrix* A,int col_size,int row_size)÷0œvoid
convert_sparse_to_arrayÃ1024Õ(sparse_matrix* A,int col_size)÷0œdouble * *
convert_to_UMFPACK_ValuesÃ1024Õ(sparse_matrix* A,int N)÷0œdouble *
convert_to_UMFPACK_indicesÃ1024Õ(sparse_matrix* A,int N)÷0œint *
convert_to_UMFPACK_sizesÃ1024Õ(sparse_matrix* A)÷0œint *
copy_contentÃ1024Õ(sparse_matrix* A,sparse_matrix* B)÷0œvoid
copy_vector_contentÃ1024Õ(double* x,double* y,int x_pos,int y_pos,int size)÷0œvoid
copy_vector_toÃ1024Õ(double* x,double* y,int n)÷0œvoid
create_2D_arrayÃ1024Õ(int n,int m)÷0œdouble * *
datafileÃ64ŒITLIN_OPT÷0œFILE
datalevelÃ64ŒITLIN_OPT÷0œPRINT_LEVEL
datfileÃ64ŒITLIN_IO÷0œFILE
datlevelÃ64ŒITLIN_IO÷0œPRINT_LEVEL
daxpy_Ã1024Õ(int *n, double *alpha, double *x, int *incx, double *y, int *incy)÷0œvoid
degree_of_occupationÃ1024Õ(sparse_matrix* A)÷0œdouble
delete_zerosÃ1024Õ(sparse_matrix* A)÷0œvoid
depthÃ64ŒAMG_SYSTEM_INFO÷0œint
diag_zeroÃ1024Õ(sparse_matrix* A)÷0œint
diagonal_preconditionerÃ1024Õ(sparse_matrix* A,sparse_matrix* L,sparse_matrix* U)÷0œvoid
double_sortÃ1024Õ(int* List,double* Values,int size)÷0œvoid
errfileÃ64ŒITLIN_IO÷0œFILE
errlevelÃ64ŒITLIN_IO÷0œPRINT_LEVEL
errorfileÃ64ŒITLIN_OPT÷0œFILE
errorlevelÃ64ŒITLIN_OPT÷0œPRINT_LEVEL
euklid_normÃ1024Õ(double* x1,int n)÷0œdouble
find_elementÃ1024Õ(sparse_matrix* A,int j)÷0œint
free_2D_arrayÃ1024Õ(double** A,int n)÷0œdouble * *
free_sparseÃ131072Õ(A)÷0
free_sparse3DÃ131072Õ(A)÷0
gauss_seidelÃ1024Õ(int (*Inv_NB_matvec)(int n,double* x,double* b), void (*NB_matvec)(int n,double* y,double* z), double* Solution,double* b,int size,int iterations,double tol)÷0œint
generate_listÃ1024Õ(int* var_indices,int var_len,int grid_size,int whole_size)÷0œint *
generate_vectorÃ1024Õ(int size,double val)÷0œdouble *
get_1D_LaplaceÃ1024Õ(double* F,int n)÷0œsparse_matrix *
get_ave_band_widthÃ1024Õ(sparse_matrix* A)÷0œint
get_dependence_patternÃ1024Õ(sparse_matrix* A)÷0œsparse_matrix *
get_dependence_pattern3DÃ1024Õ(sparse_matrix3D* A)÷0œsparse_matrix *
get_diagÃ1024Õ(sparse_matrix* A,int i)÷0œdouble
get_diag_dominanceÃ1024Õ(sparse_matrix* A)÷0œdouble
get_fast_ILU_preconditioned_matrixÃ1024Õ(sparse_matrix* A,sparse_matrix* L,sparse_matrix* U,double tol)÷0œsparse_matrix *
get_inverseÃ1024Õ(double** Q,int n)÷0œdouble * *
get_matrix_elementÃ1024Õ(sparse_matrix* A,int i,int j)÷0œdouble
get_max_band_widthÃ1024Õ(sparse_matrix* A)÷0œint
get_meanÃ1024Õ(double* List,int size)÷0œdouble
get_nonzero_indicesÃ1024Õ(double* Vector,int size,int* new_size)÷0œint *
get_partial_meanÃ1024Õ(double* List,int start,int end)÷0œdouble
get_pcg_residuumÃ1024Õ()÷0œdouble
get_positionÃ1024Õ(int* list,int size,int val,int* Flag)÷0œint
get_resized_matrixÃ1024Õ(sparse_matrix* A,int mesh_size,int new_size,int equ_index,int var_index)÷0œsparse_matrix *
get_resized_vectorÃ1024Õ(double* Vector,int old_size,int new_size)÷0œdouble *
get_sqr_meanÃ1024Õ(double* List,int size)÷0œdouble
get_sub_sparse_matrixÃ1024Õ(sparse_matrix* A,int start,int end,int* Map,int* Inv_Map)÷0œsparse_matrix *
get_test_matrixÃ1024Õ()÷0œsparse_matrix *
get_transposeÃ1024Õ(sparse_matrix* A)÷0œsparse_matrix *
get_worst_diagonalÃ1024Õ(sparse_matrix* A)÷0œdouble
i_maxÃ64ŒITLIN_OPT÷0œint
in_listÃ1024Õ(int* List,int size,int n)÷0œint
incomplete_LU_factorizationÃ1024Õ(sparse_matrix* A,sparse_matrix* L,sparse_matrix* U)÷0œvoid
infoÃ64Œrb_red_blk_node÷0œvoid
infoÃ64Œstk_stack_node÷0œDATA_TYPE
insert_element_atÃ1024Õ(sparse_matrix* A,double a,int i,int j,int pos)÷0œvoid
insert_sparseÃ1024Õ(sparse_matrix* A,double a,int i,int j)÷0œint
insert_vectorÃ1024Õ(double* Vector,double* vector,int start,int size)÷0œvoid
is_L_triang_matrixÃ1024Õ(sparse_matrix* A)÷0œint
is_U_triang_matrixÃ1024Õ(sparse_matrix* A)÷0œint
is_symmetricÃ1024Õ(sparse_matrix* A,int i,int j)÷0œint
iterÃ64ŒITLIN_INFO÷0œint
iterfileÃ64ŒITLIN_IO÷0œFILE
iterfileÃ64ŒITLIN_OPT÷0œFILE
itlin_dataoutÃ1024Õ(int k, int n, double *x, struct ITLIN_DATA *data)÷0œvoid
itlin_nopreconÃ1024Õ(int n, double *x, double *z)÷0œvoid
itlin_parcheck_and_printÃ1024Õ(int n, MATVEC *matvec, struct ITLIN_OPT *opt, int itlin_code)÷0œint
join_vectorsÃ1024Õ(double* V1,int n1,double* V2,int n2)÷0œdouble *
keyÃ64Œrb_red_blk_node÷0œvoid
leftÃ64Œrb_red_blk_node÷0œrb_red_blk_node
linear_mapÃ1024Õ(double* x,double fac,sparse_matrix* A,double* y)÷0œvoid
make_nonzero_diagÃ1024Õ(sparse_matrix* A,double* F)÷0œvoid
make_positive_diagÃ1024Õ(sparse_matrix* A)÷0œsparse_matrix *
map_backÃ1024Õ(double* Solution,double* Restricted,int n_sol,int* index_map)÷0œvoid
map_indicesÃ1024Õ(sparse_matrix* A,sparse_matrix* B,double* F,double* G,int* Map)÷0œvoid
map_sizeÃ64Œtree_sparse_matrix÷0œint
matrix_normÃ1024Õ(sparse_matrix* A)÷0œdouble
matrix_residuumÃ1024Õ(sparse_matrix* A,double* Sol,double* b)÷0œdouble
maxiterÃ64ŒITLIN_OPT÷0œint
miscfileÃ64ŒITLIN_IO÷0œFILE
miscfileÃ64ŒITLIN_OPT÷0œFILE
modeÃ64ŒITLIN_DATA÷0œanon_enum_5
monfileÃ64ŒITLIN_IO÷0œFILE
monitorfileÃ64ŒITLIN_OPT÷0œFILE
monitorlevelÃ64ŒITLIN_OPT÷0œPRINT_LEVEL
monlevelÃ64ŒITLIN_IO÷0œPRINT_LEVEL
nextÃ64Œstk_stack_node÷0œstk_stack_node
nilÃ64Œrb_red_blk_tree÷0œrb_red_blk_node
nomatvecÃ64ŒITLIN_INFO÷0œint
nopreclÃ64ŒITLIN_INFO÷0œint
nopreconÃ64ŒITLIN_INFO÷0œint
noprecrÃ64ŒITLIN_INFO÷0œint
normalize_row_sumÃ1024Õ(sparse_matrix* A)÷0œvoid
normdxÃ64ŒITLIN_DATA÷0œdouble
normdxÃ64ŒITLIN_INFO÷0œdouble
open_fileÃ1024Õ(char* dir,char* name,char* mode)÷0œFILE *
parentÃ64Œrb_red_blk_node÷0œrb_red_blk_node
partial_vector_shiftÃ1024Õ(double* x,int start,int end,double a)÷0œvoid
pcgÃ1024Õ(double* X,double* B,int n,double tol,int max_iter)÷0œint
pivotÃ1024Õ(sparse_matrix* A,double* B,int* Map)÷0œvoid
precisionÃ64ŒITLIN_INFO÷0œdouble
print_2D_arrayÃ1024Õ(double** A,int n)÷0œvoid
print_2D_listÃ1024Õ(int** A,int n)÷0œvoid
print_listÃ1024Õ(int* V,int n)÷0œvoid
print_sparseÃ1024Õ(sparse_matrix* A)÷0œvoid
print_sparse_tableÃ1024Õ(sparse_matrix* A)÷0œvoid
print_sqr_arrayÃ1024Õ(double** A,int n,int m)÷0œvoid
print_tableÃ1024Õ(double* V,char* name,int n)÷0œvoid
print_vectorÃ1024Õ(double* V,int n)÷0œvoid
rb_red_blk_nodeÃ2048÷0
rb_red_blk_nodeÃ4096÷0
rb_red_blk_treeÃ2048÷0
rb_red_blk_treeÃ4096÷0
rcodeÃ64ŒITLIN_INFO÷0œint
readlineÃ1024Õ(FILE* file,char* buffer)÷0œint
redÃ64Œrb_red_blk_node÷0œint
remove_elementÃ1024Õ(sparse_matrix* A,int i,int j)÷0œvoid
remove_element_atÃ1024Õ(sparse_matrix* A,int i,int pos)÷0œvoid
resÃ64ŒITLIN_DATA÷0œdouble
rescaleÃ64ŒITLIN_OPT÷0œLOGICAL
reset_rowÃ1024Õ(sparse_matrix* A,int i)÷0œvoid
resfileÃ64ŒITLIN_IO÷0œFILE
resfileÃ64ŒITLIN_OPT÷0œFILE
residuumÃ1024Õ(void (*Matvec)(int n,double* y,double* z),double* Sol,double* b,int n)÷0œdouble
residuumÃ64ŒITLIN_DATA÷0œdouble
residuumÃ64ŒITLIN_INFO÷0œdouble
resize_matrixÃ1024Õ(sparse_matrix* A,int new_size)÷0œvoid
resize_vectorÃ131072Õ(v,old_size,new_size)÷0
restrict_matrixÃ1024Õ(sparse_matrix* A,double* b,double** b_sub,int** index_map, double* Solution,double* Prev_solution,double tol)÷0œsparse_matrix *
restrict_matrix_colsÃ1024Õ(sparse_matrix* A,double* Sol,int* index_map)÷0œdouble *
restrict_matrix_rowsÃ1024Õ(sparse_matrix* A,int* List,int list_size,int* index_map)÷0œsparse_matrix *
restrict_systemÃ1024Õ(sparse_matrix* A,double* F,double* Sol,int start,int end)÷0œdouble *
restrict_vectorÃ1024Õ(double* Vector,int* index_map,int n_sol,int n_res)÷0œdouble *
restrict_vector_byÃ1024Õ(int i_min,int i_max,double* Vector)÷0œdouble *
rhoÃ64ŒITLIN_OPT÷0œdouble
rightÃ64Œrb_red_blk_node÷0œrb_red_blk_node
rootÃ64Œrb_red_blk_tree÷0œrb_red_blk_node
row_times_rowÃ1024Õ(sparse_matrix* A,sparse_matrix* B,int i_a,int i_b,int j_min,int j_max)÷0œdouble
scalarÃ1024Õ(double* x1,double* x2,int n)÷0œdouble
scalar_multÃ1024Õ(double a,double* x,int n)÷0œvoid
scalar_sparse_multÃ1024Õ(double a,sparse_matrix* A)÷0œvoid
scaleÃ64ŒITLIN_OPT÷0œdouble
set_connection_thresholdsÃ1024Õ(double negative,double positive)÷0œvoid
set_sparseÃ1024Õ(sparse_matrix* A,double a,int i,int j)÷0œvoid
set_thread_numÃ1024Õ(int n)÷0œvoid
set_zeroÃ1024Õ(double* Vector,int start,int end)÷0œvoid
simple_pivotÃ1024Õ(sparse_matrix* A,double* B,int* Map)÷0œvoid
sizeÃ64ŒSPARSE÷0œint
sizeÃ64ŒSPARSE3D÷0œint
sparse_LU_factorizationÃ1024Õ(sparse_matrix* A,sparse_matrix* L,sparse_matrix* U)÷0œvoid
sparse_addÃ1024Õ(sparse_matrix* A,sparse_matrix* B,double factor)÷0œvoid
sparse_approximateÃ1024Õ(sparse_matrix* A,double tol)÷0œvoid
sparse_bilinearÃ1024Õ(double* y,sparse_matrix* A,double* x)÷0œdouble
sparse_diagonalÃ1024Õ(double* d,int n)÷0œsparse_matrix *
sparse_get_optimized_index_mapÃ1024Õ(sparse_matrix* A,int* Map,int* Inv_Map)÷0œvoid
sparse_identityÃ1024Õ(int length)÷0œsparse_matrix *
sparse_in_sparseÃ1024Õ(sparse_matrix* A,sparse_matrix* B,int i_o,int j_o)÷0œvoid
sparse_is_isolatedÃ1024Õ(sparse_matrix* A,int i)÷0œint
sparse_matrixÃ4096÷0œSPARSE
sparse_matrix3DÃ4096÷0œSPARSE3D
sparse_multÃ1024Õ(sparse_matrix* A,double* x)÷0œdouble *
sparse_multiplicationÃ1024Õ(sparse_matrix* A,double* x)÷0œvoid
sparse_partial_identityÃ1024Õ(int length,int start,int end)÷0œsparse_matrix *
sparse_productÃ1024Õ(sparse_matrix* A,sparse_matrix* B)÷0œsparse_matrix *
sparse_row_permutationÃ1024Õ(sparse_matrix* A,int* Map)÷0œvoid
sparse_traceÃ1024Õ(sparse_matrix* A)÷0œdouble
sparse_zeroÃ1024Õ(int length)÷0œsparse_matrix *
sparse_zero3DÃ1024Õ(int n)÷0œsparse_matrix3D *
splitÃ1024Õ(char* string,char a,int* n)÷0œchar * *
square_matrix_cleanÃ1024Õ(sparse_matrix* A)÷0œint
stk_stackÃ2048÷0
stk_stackÃ4096÷0
stk_stack_nodeÃ2048÷0
stk_stack_nodeÃ4096÷0
subcodeÃ64ŒITLIN_INFO÷0œint
tÃ64ŒITLIN_DATA÷0œdouble
tailÃ64Œstk_stack÷0œstk_stack_node
tauÃ64ŒITLIN_DATA÷0œdouble
termcheckÃ64ŒITLIN_OPT÷0œTERM_CHECK
test_ILUÃ1024Õ(double** A,double** L,double** U,int n)÷0œvoid
test_LUÃ1024Õ(double** A,double** L,double** U,int size)÷0œvoid
test_sparse_LUÃ1024Õ(sparse_matrix* A,sparse_matrix* L,sparse_matrix* U)÷0œdouble
test_sparse_matrixÃ1024Õ(sparse_matrix* A)÷0œint
tolÃ64ŒITLIN_OPT÷0œdouble
topÃ64Œstk_stack÷0œstk_stack_node
tree_sparse_matrixÃ2048÷0
tree_sparse_matrixÃ4096÷0
vec_distÃ1024Õ(double* x1,double* x2,int n)÷0œdouble
vector_addÃ1024Õ(double* x,double* y,double factor,int n)÷0œvoid
vector_normalizeÃ1024Õ(double* x,int n)÷0œvoid
vector_permutationÃ1024Õ(double* F,int* Map,int n)÷0œvoid
vector_shiftÃ1024Õ(double* x,int n,double a)÷0œvoid
zero_int_listÃ1024Õ(int n)÷0œint *
zero_matrixÃ1024Õ(int n,int m)÷0œdouble * *
zero_vectorÃ1024Õ(int n)÷0œdouble *
zibnum_descaleÃ1024Õ(int n, double *v1, double *v2, double *scale)÷0œvoid
zibnum_fwallocÃ1024Õ(int size, double **ptr, char vname[])÷0œint
zibnum_iwallocÃ1024Õ(int size, int **ptr, char vname[])÷0œint
zibnum_norm2Ã1024Õ(int n, double *v)÷0œdouble
zibnum_pfwallocÃ1024Õ(int size, double ***ptr, char vname[])÷0œint
zibnum_scaleÃ1024Õ(int n, double *v1, double *v2, double *scale)÷0œvoid
zibnum_scaled_norm2Ã1024Õ(int n, double *v, double *scale)÷0œdouble
zibnum_scaled_sprodÃ1024Õ(int n, double *v1, double *v2, double *scale)÷0œdouble
